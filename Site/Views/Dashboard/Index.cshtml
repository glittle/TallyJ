@using System.Xml
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@model ElectionsListViewModel
@{
    ViewBag.Title = "Dashboard";
    ViewBag.Message = (UserSession.CurrentElectionName).AsRawHtml();

  //ContextItems.AddJavascriptForPage("homeIndexUrl", "homeIndexPage.electionsUrl={0};".FilledWith(@Url.Action("Index", "Elections").QuotedForJavascript()));
  //ContextItems.AddJavascriptForPage("homeIndexPage", "homeIndexPage.elections={0};".FilledWith(Model.MyElectionsInfo.SerializedAsJson()));
}
@*@section featured {
  <section class="featured">
    <div class="content-wrapper">
      <hgroup class="title"><h1>@ViewBag.Title.</h1>
        <h2>@ViewBag.Message</h2>
      </hgroup>
      <p>Select from the modules below. To get started, setup your Election. To learn more,
        please read more in the @Html.ActionLink("Reference Materials", "Learning", "Public"). </p>
    </div>
  </section>
}
*@
@foreach (XmlElement item in new MenuHelper(this).TrimmedMenu().ChildNodes)
{
  <section class="features">
    <h2 class="featuresTitle">@item.GetAttribute("longtitle")</h2>
    @foreach (var child in item.ChildNodes
                            .Cast<XmlNode>()
                            .Where(n=>n.NodeType==XmlNodeType.Element)
                            .Cast<XmlElement>()
                            .Where(c=>c.GetAttribute("showOnDashboard").DefaultTo("true")=="true"))
    {
        <a href="@Url.Action(child.GetAttribute("action"), child.GetAttribute("controller"))">
            <section class="feature @child.GetAttribute("class")">
                <h3>
                    @child.GetAttribute("title")</h3>
                <p>
                    @child.GetAttribute("desc")</p>
            </section></a>
    }
    <div class="Clear">
    </div>
  </section>
}
