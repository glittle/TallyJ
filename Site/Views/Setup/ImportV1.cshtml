@model ImportV1Model
@using TallyJ.Code.Session
@{
    ContextItems.AddJavascriptForPage("controllerUrl", "importV1Page.controllerUrl={0};".FilledWith(@Url.Action("Index", "Setup").QuotedForJavascript()));
    ContextItems.AddJavascriptForPage("previous", "importV1Page.previousFiles={0};".FilledWith(Model.PreviousUploads().SerializedAsJsonString()));
}
<script src="@Url.Content("~/Scripts/fileuploader.js")" type="text/javascript"></script>
<div class="PullInstructions">
    <ol>
        <li>When using TallyJ, the list of adults in the community who are eligible to vote,
            or be voted for, can be loaded using this page.</li>
        <li>To load the list of names, you must first prepare a comma-separated value (XML file)
            with all the people's names in it.<ul>
                <li>The first line of the file must be a "headers row" with the names of each column. The headers should not include any accented words, such Bah&aacute;'&iacute;...</li>
                <li>The file should be saved as a normal Windows text/XML file, or using UTF-8 or UTF-16
                    encoding.</li>
            </ul>
        </li>
        <li>This file must only contain the names of eligible adults. If it includes children
            and youth, or people no longer in the community or not eligible to vote, you should
            fix the XML file before uploading it.
            <ul>
                <li>If the file is exported from a database or other tool, see if you can export it
                    again, with only the eligible adults included.</li>
                <li>You can also open the XML file with a spreadsheet program, like Microsoft Excel,
                    and edit it there.</li>
            </ul>
        </li>
        <li>Once the XML is ready to upload and process, proceed to Step 1 below to upload the
            file.</li>
        <li>In TallyJ, each person has a First and Last name. They also have other optional
            fields for more information, such as a maiden name or nickname. These fields are
            listed below. For each of the columns from the XML file, select which TallyJ field
            it should be put into, if any. </li>
        <li>If you find that accented characters are not being processed correctly, you may
            need to change the Content Encoding and try Importing again. </li>
    </ol>
</div>
<h2>
    Step 1: Upload the XML file</h2>
<p>
    Click the button below to choose and upload a file, or drag the file from Windows
    Explorer to this window.
</p>
<div id="file-uploader">
</div>
<div class="uploadList">
    <h4>
        Files on Server</h4>
    <table>
        <thead>
            <tr>
                <th>
                    Action
                </th>
                <th>
                    Status
                </th>
                <th>
                    Name
                </th>
                <th>
                    Upload Time
                </th>
                <th>
                    Size
                </th>
                <th>
                    Other Actions
                </th>
            </tr>
        </thead>
        <tbody id="uploadListBody">
            <tr data-rowid="{C_RowId}" class="{ProcessingStatus} {RowClass}">
                <td class="Actions">
                    <div class="MakeActive" title="Select this file for mapping columns and importing people">Select</div>
                  <div class="CopyMap" title="Copy the column mapping information from this file to the selected one">Copy Mapping</div>
                  <span>(selected)</span>
                </td>
                <td>
                    {ProcessingStatusAndSteps}
                </td>
                <td>
                    {OriginalFileName}
                </td>
                <td>
                    {UploadTimeExt}
                </td>
                <td>
                    {FileSize}
                </td>
                <td>
                    <button type="button" class="download" title="Download a copy of this file">
                        <span class="ui-icon ui-icon-arrowreturn-1-s"></span>
                    </button>
                    <button type="button" class="deleteFile" title="Permanently delete this from the server">
                        <span class="ui-icon ui-icon-trash"></span>
                    </button>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<h2>
    Step 2: Import people</h2>
<p>All the people in the file will be processed and added to the names already in the database. Any that match will not be added again.
If you need to erase all the currently loaded names (before ballots are entered), use the "Delete all People Records" below before importing again.</p>
<div>
    <button type="button" id="btnImport">
        Import now</button>
    <button type="button" id="btnClearAll" class="float-right">
        Delete all People Records</button>
    <div id="importResults">
    </div>
</div>
