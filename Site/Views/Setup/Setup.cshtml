@model SetupModel
@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@{
    ViewBag.Title = "Election Setup";
    ViewBag.Message = "Who, What, When and Where!";

    ContextItems.AddJavascriptForPage("setupIndexPageUrl", "setupIndexPage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
    ContextItems.AddJavascriptForPage("election", "setupIndexPage.Election={0};".FilledWith(Model.CurrentElection.SerializedAsJsonString()));
    ContextItems.AddJavascriptForPage("locations", "setupIndexPage.Locations={0};".FilledWith(Model.LocationsJson));
    ContextItems.AddJavascriptForPage("tellers", "setupIndexPage.Tellers={0};".FilledWith(Model.TellersJson));
    ContextItems.AddJavascriptForPage("rules", "setupIndexPage.initialRules('{type}','{mode}',{rules});".FilledWith(Model.RulesForCurrentElection));
}
<div class="PullInstructions">
    <ol>
        <li>Here is where you setup your election, especially configuring the type of election.</li>
        <li>The Name will be seen by anyone using TallyJ, while the Convenor and Date are mostly
            for reports later.</li>
        <li>Carefully choose the Type of Election and Variation, then if appropriate, the number
            of names to be put on each ballot and how many to report for those with the next
            highest number of votes.</li>
      <li>If your election is distributed - being held in multiple venues - enter a list of
        Location names here. This will, for example, permit the Roll Call tool to show the
        correct people.</li>
        <li>Teller names are added by the tellers when working at a computer.</li>
        <li>After you have read these instructions, you may click on the word "Instructions"
            above the box to hide them or to show them again.</li>
    </ol>
</div>
<table class="Demographics">
    <tr>
        <th>
        </th>
        <td>
            <button type="button" id="btnSave">
                Save Changes</button>
        </td>
    </tr>
    <tr>
        <th>
            Name
        </th>
        <td>
            <input type="text" id="txtName" data-name="Name">
        </td>
    </tr>
    <tr>
        <th>
            Testing?
        </th>
        <td>
            <input type="checkbox" id="cbShowAsTest" data-name="ShowAsTest">
            <label for="cbShowAsTest">
                Show this as a Test election in my list of elections.</label>
        </td>
    </tr>
    <tr>
        <th>
            Convenor
        </th>
        <td>
            <input type="text" id="txtConvenor" data-name="Convenor">
        </td>
    </tr>
    <tr>
        <th>
            Election Date
        </th>
        <td>
            <input type="date" id="txtDate" data-name="DateOfElection">
        </td>
    </tr>
    <tr>
        <th>
            Type of Election
        </th>
        <td>
            <select id="ddlType" data-name="ElectionType">
                @ElectionTypeEnum.ForHtmlSelect()
            </select>
        </td>
    </tr>
    <tr>
        <th>
            Variation
        </th>
        <td>
            <select id="ddlMode" data-name="ElectionMode">
                @ElectionModeEnum.ForHtmlSelect("", new Dictionary<string, string>
                                            {
                                              {"B"," id=modeB"}
                                            })
                @*                <option value="N">Normal Election</option>
                <option value="T">Tie-Break</option>
                <option value="B" id="modeB">By-election</option>
*@
            </select>
        </td>
    </tr>
    <tr class="electionDetailT">
        <th>
            Names on Ballot
        </th>
        <td>
            <input type="number" min="1" id="txtNames" data-name="NumberToElect" />
        </td>
    </tr>
    <tr class="electionDetailB">
        <th>
            Report on next highest
        </th>
        <td>
            <input type="number" min="0" id="txtExtras" data-name="NumberExtra" />
        </td>
    </tr>
    <tr class="electionDetail">
        <th>
            Who can vote?
        </th>
        <td>
            <select id="ddlCanVote" data-name="CanVote">
                <option value="A">Everyone on the list</option>
                <option value="N">Named delegates</option>
            </select>
        </td>
    </tr>
    <tr class="electionDetail">
        <th>
            Who can be voted for?
        </th>
        <td>
            <select id="ddlCanReceive" data-name="CanReceive">
                <option value="A">Everyone on the list</option>
                <option value="N">Named individuals</option>
            </select>
        </td>
    </tr>
    <tr class="electionDetailB">
        <th>
        </th>
        <td>
            <button id="btnResetPeople" type="button">
                Update all Person records</button>
        </td>
    </tr>
    <tr class="electionDetail">
        <th>
            <label for="chkList">
                Show on TallyJ welcome screen</label>
        </th>
        <td>
            <input type="checkbox" id="chkList" data-name="ListForPublic" />
        </td>
    </tr>
    <tr class="electionDetailB">
        <th>
            "Secret Code" for Teller access
        </th>
        <td>
            <input type="text" data-name="ElectionPasscode" maxlength="50" />
        </td>
    </tr>
</table>
<div class="More Locations">
    <h3>
        Locations</h3>
    <div id="locationList">
    </div>
    <button type="button" id="btnAddLocation">
        Add Location</button>
    <h3 class="TellerTitle">
        Tellers at Computers</h3>
    <div id="tellersList">
    </div>
</div>
<div class="More Misc">
    <p>
        To re-clean the data before this election, removing voting information (who can
        vote, where they voted, who is ineligible):
        <button type="button" id="btnResetList">
            Reset voting information</button>
    </p>
    <p class="techInfo" title="Technical information">
        Internal code: <span data-name="ElectionGuid"></span>
    </p>
</div>
